# Generated by Django 5.0.6 on 2024-08-28 16:16

import core.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import user_management.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('goal_task_management', '0002_initial'),
        ('habit_management', '0001_initial'),
        ('life_sphere', '0001_initial'),
        ('principle_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('PNS', 'Prefer not to say')], max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_picture/', validators=[user_management.validators.validate_profile_image])),
                ('notification_preferences', models.CharField(default='Push notifications', max_length=255)),
                ('ai_assistant_model', models.CharField(choices=[('spouse', 'Spouse'), ('friend', 'Friend'), ('coach', 'Coach'), ('therapist', 'Therapist')], max_length=255)),
                ('dashboard_customization', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPrinciple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('custom_principle', models.CharField(blank=True, max_length=255, null=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('principle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='principle_management.principle')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_principles', to='user_management.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('mission_statement', models.TextField(blank=True, null=True)),
                ('tailored_by_ai', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_mission', to='user_management.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('progress', models.FloatField(default=0.0, help_text='Progress in percentage', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('custom_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('is_repetitive', models.BooleanField(default=False)),
                ('repetition_interval', models.CharField(default='daily', max_length=50)),
                ('completion_count', models.IntegerField(default=0)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='habit_management.habit')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_habits', to='user_management.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('paused', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0.0, help_text='Progress in percentage', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('due_date', models.DateField(blank=True, null=True, validators=[core.models.validate_start_due_date])),
                ('custom_goal', models.CharField(blank=True, max_length=255, null=True)),
                ('goal_type', models.CharField(choices=[('short_term', 'Short-term'), ('long_term', 'Long-term')])),
                ('is_custom', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='goal_task_management.goal')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='user_management.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('custom_area', models.CharField(blank=True, max_length=255, null=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='life_sphere.area')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_area', to='user_management.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('type', models.CharField(choices=[('Professional Roles', 'Professional Roles'), ('Personal Roles', 'Personal Roles'), ('Self-Improvement Roles', 'Self-Improvement Roles'), ('Community and Social Impact Roles', 'Community and Social Impact Roles'), ('Wellness and Spiritual Roles', 'Wellness and Spiritual Roles')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('custom_title', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('user_profile', models.ManyToManyField(related_name='roles', to='user_management.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('paused', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('C', 'Critical')], default='M', max_length=1)),
                ('custom_name', models.CharField(blank=True, max_length=255, null=True)),
                ('progress', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_repetitive', models.BooleanField(default=False)),
                ('repetition_interval', models.CharField(default='daily', max_length=50)),
                ('completion_count', models.IntegerField(default=0)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goal_task_management.task')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='user_management.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='userprinciple',
            constraint=models.UniqueConstraint(fields=('user_profile', 'principle'), name='unique_user_principle'),
        ),
        migrations.AddConstraint(
            model_name='userprinciple',
            constraint=models.UniqueConstraint(fields=('user_profile', 'custom_principle'), name='unique_user_custom_principle'),
        ),
        migrations.AddConstraint(
            model_name='usergoal',
            constraint=models.UniqueConstraint(fields=('user_profile', 'goal'), name='unique_user_goal'),
        ),
        migrations.AddConstraint(
            model_name='usergoal',
            constraint=models.UniqueConstraint(fields=('user_profile', 'custom_goal'), name='unique_user_custom_goal'),
        ),
    ]
